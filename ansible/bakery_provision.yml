---

- hosts: localhost
  connection: local
  gather_facts: False
  pre_tasks:
    - name: establish playbook args
      set_fact:
        aws_environment_with_rolenames: "{{aws_environment_with_rolenames}}"
        bakery_roles_path: "{{ nucleator_configuration_dir}}/contrib/bakery-roles"
        baseline_roles:
          - config
          - siteconfig

    - name: read flow for specified bakery_group
      include_vars: "{{ nucleator_configuration_dir }}/contrib/bakery-roles/{{bakery_group}}_recipe.yml"

- include: "{{ provision.pre_plays | default("empty.yml") }}"

  roles: {{ baseline_roles + provision.roles}}

  vars:
    cage_name: "{{cage_name}}"
    customer_name: "{{customer_name}}"
    stackset_instance_name: "{{ cli_stackset_instance_name }}"
    # service_name: "{{service_name}}-configinstance-{{node_type}}"
    ami_id: "{{ ami_id }}"
    ami_name: "{{ ami_name }}"

- hosts: tag_NucleatorCage_{{cage_name}}:&tag_NucleatorCustomer_{{customer_name}}
  user: ec2-user
  connection: local
  gather_facts: False
  roles:
    - nucleatorgroups

  tasks:
    - name: ensure that ssh config dir exists
      file: path="{{nucleator_ssh_config_dir}}" state=directory

    - name: generate ssh config
      bastion_ssh_config:
        dest: "{{nucleator_ssh_config_dir}}"
        identity_file: "{{ nucleator_configuration_dir}}/{{ hostvars.localhost.keypair_name }}.pem"
        user: "ec2-user"
        bastion_user: "ec2-user"

- include: "{{ provision.post_plays | default("empty.yml") }}"
